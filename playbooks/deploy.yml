- name: Deploy service
  hosts: deployment_coordinator

  environment:
    KUBECONFIG: >-
      {{ kubeconfig_file | default(ansible_env['KUBECONFIG']
                           if 'KUBECONFIG' in ansible_env else '') }}

  tasks:
  - name: test if minikube_user is set correctly
    ansible.builtin.assert:
      that:
        - minikube_user is defined
        - minikube_user is string
    quiet: yes
    
  - name: install requirements
    ansible.builtin.package:
      name: "{{ minikube_requirements }}"
      state: present

  - name: install minikube (apt)
    ansible.builtin.apt:
      deb: "{{ item }}"
      state: present
    when:
      - ansible_os_family == "Debian"
    loop: "{{ minikube_packages }}"

  - name: install minikube (yum)
    ansible.builtin.yum:
      name: "{{ minikube_packages }}"
      state: present
      disable_gpg_check: yes
    when:
      - ansible_os_family in [ "RedHat", "Rocky" ]

  - name: start minikube once
    ansible.builtin.command:
      cmd: "{{ minikube_command }}"
      creates: nothing
    become: yes
    become_user: "{{ minikube_user }}"
    when:
      - ansible_connection not in [ "container", "docker", "community.docker.docker" ]
  - name: create persistent volume
    import_role:
      name: mysql
      tasks_from: create_local_pv
    tags:
    - mysql_local_pv

  - name: Deploy mysql service
    import_role:
      name: mysql
      tasks_from: deploy
    tags:
    - mysql_service
    
  - name: Deploy sentinal service
    import_role:
      name: sentinal
      tasks_from: deploy
    tags:
    - sentinal_service
